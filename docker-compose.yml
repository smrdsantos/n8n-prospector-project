services:
  # ------------------------------------
  # 1. SERVICO DE BANCO DE DADOS (POSTGRESQL) - DATA WAREHOUSE
  # ------------------------------------
  postgres:
    image: postgres:15
    container_name: postgres_wh
    restart: unless-stopped
    environment:
      - POSTGRES_USER=n8n_user
      - POSTGRES_PASSWORD=!C293112c!  # <-- SENHA FORTE APLICADA
      - POSTGRES_DB=n8n_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_user -d n8n_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ------------------------------------
  # 2. SERVICO N8N (ORQUESTRACAO)
  # ------------------------------------
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_prospector
    restart: unless-stopped
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n_db
      - DB_POSTGRESDB_USER=n8n_user
      - DB_POSTGRESDB_PASSWORD=!C293112c!  # <-- SENHA FORTE APLICADA
      - N8N_HOST=localhost
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - GENERIC_TIMEZONE=America/Sao_Paulo
      - NODE_FUNCTION_ALLOW_EXTERNAL=axios,qs,request,pandas
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      postgres:
        condition: service_healthy

  # ------------------------------------
  # 3. SERVICO JUPYTERLAB (PYTHON/ANALISE INTERATIVA)
  # ------------------------------------
  jupyter:
    image: jupyter/scipy-notebook:latest
    container_name: jupyter_analysis
    restart: unless-stopped
    environment:
      - JUPYTER_TOKEN=!C293112c!  # <-- TOKEN DE ACESSO (MESMA SENHA)
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work

  # ------------------------------------
  # 4. SERVICO AIRBYTE (EXTRAÇÃO E CARGA - VISUALIZACAO)
  # ------------------------------------
  airbyte-web:
    image: airbyte/webapp:0.50.37
    container_name: airbyte_web
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  n8n_data:
  notebooks: